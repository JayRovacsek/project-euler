mod test;

// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

pub fn solve() {
    let answer: usize = generate_fib_numbers(3_999_999).iter().filter(|x|*x % 2 == 0).sum();
    println!("Answer is: {}", answer);
}

fn generate_fib_numbers(limit: usize) -> Vec<usize> {
    let mut fib_numbers = vec!(1,2);
    loop {
        let next_fib_number = fib_numbers.last().unwrap_or(&0) + fib_numbers.get(fib_numbers.len() - 2).unwrap_or(&0);
        match next_fib_number {
            n if n <= limit => fib_numbers.push(next_fib_number),
            _ => break
        }
    }
    fib_numbers
}
